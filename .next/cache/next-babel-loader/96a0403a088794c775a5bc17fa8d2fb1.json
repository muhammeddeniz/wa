{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\muham\\\\Desktop\\\\working-area\\\\src\\\\components\\\\button\\\\button.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport cx from 'classnames';\nimport './button.scss';\n\nconst Button = (_ref) => {\n  let {\n    red,\n    green,\n    blue,\n    children,\n    input\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"red\", \"green\", \"blue\", \"children\", \"input\"]);\n\n  const btnClass = cx(\"btn\", {\n    \"btn-red\": red,\n    \"btn-green\": green,\n    \"btn-blue\": blue,\n    \"btn-input\": input\n  });\n  return __jsx(\"button\", _extends({\n    className: btnClass\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), children);\n};\n\nexport default Button;","map":{"version":3,"sources":["C:/Users/muham/Desktop/working-area/src/components/button/button.tsx"],"names":["React","cx","Button","red","green","blue","children","input","rest","btnClass"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAO,eAAP;;AASA,MAAMC,MAAwB,GAAG,UAO3B;AAAA,MAP4B;AAC9BC,IAAAA,GAD8B;AAE9BC,IAAAA,KAF8B;AAG9BC,IAAAA,IAH8B;AAI9BC,IAAAA,QAJ8B;AAK9BC,IAAAA;AAL8B,GAO5B;AAAA,MADCC,IACD;;AAEF,QAAMC,QAAQ,GAAGR,EAAE,CACf,KADe,EAEf;AACI,eAAYE,GADhB;AAEI,iBAAaC,KAFjB;AAGI,gBAAYC,IAHhB;AAII,iBAAaE;AAJjB,GAFe,CAAnB;AAUA,SACI;AAAQ,IAAA,SAAS,EAAEE;AAAnB,KAAiCD,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKF,QADL,CADJ;AAKH,CAxBD;;AA0BA,eAAeJ,MAAf","sourcesContent":["import React  from 'react';\r\nimport cx from 'classnames';\r\n\r\nimport './button.scss';\r\n\r\ntype Props = JSX.IntrinsicElements['button'] & {\r\n    red?: boolean;\r\n    green?: boolean;\r\n    blue?: boolean; \r\n    input?: boolean;\r\n}\r\n\r\nconst Button : React.FC<Props> = ({\r\n    red,\r\n    green,\r\n    blue,\r\n    children,\r\n    input,\r\n    ...rest\r\n}) => {\r\n\r\n    const btnClass = cx(\r\n        \"btn\",\r\n        {\r\n            \"btn-red\":  red,\r\n            \"btn-green\": green,\r\n            \"btn-blue\": blue,\r\n            \"btn-input\": input\r\n        } \r\n    );\r\n\r\n    return(\r\n        <button className={btnClass} {...rest}>\r\n            {children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Button;"]},"metadata":{},"sourceType":"module"}