{"ast":null,"code":"var _class, _descriptor, _descriptor2, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nimport { observable, action } from 'mobx';\nlet Store = (_class = (_temp = class Store {\n  constructor() {\n    _initializerDefineProperty(this, \"cards\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"ekle\", _descriptor2, this);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"cards\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [{\n      title: \"denem\",\n      text: \"deneme\"\n    }, {\n      title: \"fdas\",\n      text: \"deneme\"\n    }];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"ekle\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return yeni => {\n      this.cards.push(yeni);\n    };\n  }\n})), _class);\nexport default Store;","map":{"version":3,"sources":["/home/muhammed/Desktop/react/working-area/src/store/store.ts"],"names":["observable","action","Store","title","text","yeni","cards","push"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,MAAnC;IAEMC,K,sBAAN,MAAMA,KAAN,CAAY;AAAA;AAAA;;AAAA;AAAA;;AAAA,C,+EACPF,U;;;;;WAIO,CAAC;AACLG,MAAAA,KAAK,EAAE,OADF;AAELC,MAAAA,IAAI,EAAE;AAFD,KAAD,EAIR;AACID,MAAAA,KAAK,EAAE,MADX;AAEIC,MAAAA,IAAI,EAAE;AAFV,KAJQ,C;;wEAUPH,M;;;;;WACOI,IAAD,IAAe;AAClB,WAAKC,KAAL,CAAWC,IAAX,CAAgBF,IAAhB;AACH,K;;;AAML,eAAeH,KAAf","sourcesContent":["import { observable, action } from 'mobx';\n\nclass Store {\n    @observable\n    cards : [{\n        title: string,\n        text: string\n    },[]] = [{\n        title: \"denem\",\n        text: \"deneme\"\n    },\n    {\n        title: \"fdas\",\n        text: \"deneme\"\n    }];\n\n\n    @action\n    ekle = (yeni: any) => {\n        this.cards.push(yeni);\n    } \n\n\n}\n\n\nexport default Store;\n\n"]},"metadata":{},"sourceType":"module"}